{"version":3,"sources":["components/ContactForm/useForm.js","components/ContactForm/validationRules.js","components/ContactForm/styles.js","components/ContactForm/index.js"],"names":["useForm","validate","useState","values","setValues","errors","setErrors","shouldSubmit","setShouldSubmit","useEffect","type","Object","keys","length","notification","message","description","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","axios","post","then","email","test","number","suburb","ContactContainer","styled","div","Contact","section","FormGroup","form","Span","span","ButtonContainer","Row","React","lazy","Col","OtherComponent","Block","Button","TextArea","SimpleSelect","withTranslation","title","content","id","t","e","ValidationType","ErrorMessage","cascade","justify","align","lg","md","sm","padding","autoComplete","onSubmit","emailjs","sendForm","result","alert","text","window","location","reload","error","onsubmit","minLength","required","label","placeholder","onChange","pattern","subject","className","href","fallback","color","height","width","timeout"],"mappings":"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","file":"static/js/29.5680204f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst useForm = (validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = (type) => {\r\n    notification[type]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon(\"success\");\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","export default function validate(values) {\r\n  let errors = {};\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.number) {\r\n    errors.number = \"Number is required\";\r\n  } else if (/^\\d{10}$/.test(values.email)) {\r\n    errors.number = \"Number is invalid\";\r\n  }\r\n  if (!values.suburb) {\r\n    errors.suburb = \"Suburb is required\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactContainer = styled.div`\r\n  padding: 7rem 0;\r\n  padding-left:80px;\r\n  padding-right:30px;\r\n\r\n`;\r\n\r\nexport const Contact = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  @media only screen and (min-width: 980px) {\r\n    padding: 10rem 7rem;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled.form`\r\n  width: 100%;\r\n  max-width: 520px;\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  text-align: end;\r\n  position: relative;\r\n  margin-bottom: 2.75rem;\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n    \r\n  }\r\n`;","import React, { lazy, Suspense } from \"react\";\r\n// import { Row, Col } from \"antd\";\r\n\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport emailjs from 'emailjs-com';\r\nimport Loader from \"react-loader-spinner\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validationRules\";\r\n// import loadable from '@loadable/component'\r\n\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport './stylesForm.css'\r\nimport * as S from \"./styles\";\r\n\r\n// const OtherComponent = loadable(() => import('../../pages/First'))\r\nconst Row = React.lazy(() => import(/* webpackChunkName: \"sula-antd\" */ 'antd/lib/grid/row'));\r\nconst Col = React.lazy(() => import(/* webpackChunkName: \"sula-antd\" */ 'antd/lib/grid/col'));\r\nconst OtherComponent = lazy(() => import(\"../First.js\"));\r\nconst Block = lazy(() => import(\"../Block\"));\r\nconst Button = lazy(() => import(\"../../common/Button\"));\r\nconst TextArea = lazy(() => import(\"../../common/TextArea\"));\r\nconst SimpleSelect = lazy(() => import(\"../../common/DropDown\"));\r\n\r\n// const GoogleMap = lazy(() => import('../../pages/First'), {\r\n//   fallback: <div><Loader\r\n//     type=\"Rings\"\r\n//     color=\"#00BFFF\"\r\n//     timeout={9000}\r\n//     height={80} width={80} /></div>\r\n// })\r\n\r\nconst Contact = ({ title, content, id, t , e, handleSubmit}) => {\r\n   function sendEmail(e) {\r\n    // e.preventDefault({passive: true});\r\n\r\n        emailjs.sendForm(\r\n                \"service_a9ktqlp\",\r\n                \"template_l0mglga\",\r\n                e.target,\r\n                \"user_yw3a8DYtaKOIm8KcBtk2L\"\r\n        )\r\n        .then((result) => {\r\n            if(alert(result.text )) {}\r\n            else window.location.reload()\r\n        }, (error) => {\r\n            alert(error.text);\r\n        });\r\n    }\r\n  const { values, errors, handleChange } = useForm(validate);\r\n\r\n  const ValidationType = ({ type }) => {\r\n    const ErrorMessage = errors[type];\r\n    return errors[type] ? (\r\n      <Zoom cascade>\r\n        <S.Span>{ErrorMessage}</S.Span>\r\n      </Zoom>\r\n    ) : (\r\n      <S.Span />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.ContactContainer id={id} >\r\n    \r\n      <S.Contact>\r\n        <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n\r\n          <Col lg={12} md={12} sm={24}>\r\n          <Block padding={true} title={title} content={content} />\r\n              <Col>\r\n                </Col>\r\n            <S.FormGroup autoComplete=\"off\" onSubmit={sendEmail ||  handleSubmit}  onsubmit=\"return false\">\r\n              <Col span={24}>\r\n                <input minLength=\"1\"  required=\"required\" \r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"firstName\"\r\n                  label=\"services\"\r\n                  placeholder=\"Name *\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              \r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              \r\n              <Col span={24}>\r\n                <input id=\"input\" type=\"email\"\r\n                  name=\"email\" required=\"required\"\r\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    placeholder=\"JohnSmith@email.com *\" />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <input\r\n                  placeholder=\"Phone Number *\"\r\n                  value={values.number || \"\"}\r\n                  name=\"number\"\r\n                  required=\"required\"\r\n                  id=\"number\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"Number\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <input\r\n                  placeholder=\"Suburb Name *\"\r\n                  value={values.suburb || \"\"}\r\n                  name=\"suburb\"\r\n                  required=\"required\"\r\n                  id=\"suburb\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"Suburb\" />\r\n              </Col>\r\n              <Row type=\"flex\" justify=\"space-between\">\r\n              <Col span={24} lg={12} md={24} sm={24}>\r\n                <SimpleSelect\r\n                  placeholder=\"menu\"\r\n                  value={values.message || \"\"}\r\n                  name=\"menu\"\r\n                  required=\"required\"\r\n                  id=\"menu\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <Col span={24} lg={12} md={24} sm={24}>\r\n                <input\r\n                required=\"required\" \r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  id=\"subject\"\r\n                  placeholder=\"Subject *\"\r\n                  title=\"Subject *\"\r\n                  value={values.subject || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"subject\" />\r\n              </Col>\r\n              </Row>\r\n              <Col span={24} >\r\n                <TextArea\r\n                  placeholder=\"Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  id=\"Message\"\r\n                  minLength=\"5\" \r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              \r\n              <S.ButtonContainer>\r\n                <Button name=\"submit\" type=\"submit\"  id=\"Submit\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n              </S.ButtonContainer>\r\n            </S.FormGroup>\r\n          </Col>\r\n          <Col lg={12} md={11} sm={24}>\r\n          <div id=\"TextAddress\">\r\n          <div className=\"formText\">\r\n                  <a href=\"tel:02-9419-7947\">\r\n                    Ph: (02) 9419 7947 \r\n                    </a>\r\n                </div> \r\n              <div className=\"formText\">\r\n                <a href=\"https://goo.gl/maps/hrBNba4G8a1EbgFg6\">\r\n                 Unit 17, 4-6 Chaplin Drive Lane Cove West NSW 2066\r\n                  </a>\r\n                  \r\n              </div>\r\n              </div>\r\n                    <Suspense fallback={<div>\r\n                    <Loader  type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} /></div>}>\r\n                \r\n                  <OtherComponent/>\r\n                </Suspense>\r\n                \r\n          </Col>\r\n        </Row>\r\n      </S.Contact>\r\n    </S.ContactContainer>\r\n  );\r\n};\r\n\r\n\r\nexport default withTranslation()(Contact);\r\n"],"sourceRoot":""}