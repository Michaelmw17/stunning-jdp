{"version":3,"sources":["components/ContactForm/useForm.js","components/ContactForm/validationRules.js","components/ContactForm/styles.js","components/ContactForm/index.js"],"names":["useForm","validate","useState","values","setValues","errors","setErrors","shouldSubmit","setShouldSubmit","useEffect","type","Object","keys","length","notification","message","description","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","axios","post","then","email","test","number","suburb","ContactContainer","styled","div","Contact","section","FormGroup","form","Span","span","ButtonContainer","Block","lazy","Button","TextArea","SimpleSelect","GoogleMap","fallback","color","timeout","height","width","withTranslation","title","content","id","t","e","ValidationType","ErrorMessage","cascade","justify","align","lg","md","sm","padding","className","href","autoComplete","onSubmit","passive","emailjs","sendForm","result","alert","text","window","location","reload","error","onsubmit","InputLabel","shrink","minLength","required","label","placeholder","onChange","pattern","subject","defer"],"mappings":"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","file":"static/js/6.16fcfbe1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst useForm = (validate) => {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [shouldSubmit, setShouldSubmit] = useState(false);\r\n\r\n  const openNotificationWithIcon = (type) => {\r\n    notification[type]({\r\n      message: \"Success\",\r\n      description: \"Your message has been sent!\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validate(values));\r\n    // Your url for API\r\n    const url = \"\";\r\n    if (Object.keys(values).length === 3) {\r\n      axios\r\n        .post(url, {\r\n          ...values,\r\n        })\r\n        .then(() => {\r\n          setShouldSubmit(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && shouldSubmit) {\r\n      setValues(\"\");\r\n      openNotificationWithIcon(\"success\");\r\n    }\r\n  }, [errors, shouldSubmit]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n    setErrors((errors) => ({ ...errors, [event.target.name]: \"\" }));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","export default function validate(values) {\r\n  let errors = {};\r\n  if (!values.name) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Email address is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"Email address is invalid\";\r\n  }\r\n  if (!values.number) {\r\n    errors.number = \"Number is required\";\r\n  } else if (/^\\d{10}$/.test(values.email)) {\r\n    errors.number = \"Number is invalid\";\r\n  }\r\n  if (!values.suburb) {\r\n    errors.suburb = \"Suburb is required\";\r\n  }\r\n  if (!values.message) {\r\n    errors.message = \"Message is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactContainer = styled.div`\r\n  padding: 7rem 0;\r\n  padding-left:80px;\r\n  padding-right:30px;\r\n\r\n`;\r\n\r\nexport const Contact = styled.section`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  @media only screen and (min-width: 980px) {\r\n    padding: 10rem 7rem;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled.form`\r\n  width: 100%;\r\n  max-width: 520px;\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  font-family: 'Ubuntu', sans-serif;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  text-align: end;\r\n  position: relative;\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;","import { lazy, Suspense } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport emailjs from 'emailjs-com';\r\nimport Loader from \"react-loader-spinner\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validationRules\";\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport './stylesForm.css'\r\nimport * as S from \"./styles\";\r\n\r\n\r\nconst Block = lazy(() => import(\"../Block\"));\r\nconst Button = lazy(() => import(\"../../common/Button\"));\r\nconst TextArea = lazy(() => import(\"../../common/TextArea\"));\r\nconst SimpleSelect = lazy(() => import(\"../../common/DropDown\"));\r\n\r\nconst GoogleMap = lazy(() => import('../../pages/First'), {\r\n  fallback: <div><Loader\r\n    type=\"Rings\"\r\n    color=\"#00BFFF\"\r\n    timeout={9000}\r\n    height={80} width={80} /></div>\r\n})\r\n\r\nconst Contact = ({ title, content, id, t , e, handleSubmit}) => {\r\n   function sendEmail(e) {\r\n    e.preventDefault({passive: true});\r\n\r\n        emailjs.sendForm(\r\n                \"service_a9ktqlp\",\r\n                \"template_l0mglga\",\r\n                e.target,\r\n                \"user_yw3a8DYtaKOIm8KcBtk2L\"\r\n        )\r\n        .then((result) => {\r\n            if(alert(result.text )) {}\r\n            else window.location.reload()\r\n        }, (error) => {\r\n            alert(error.text);\r\n        });\r\n    }\r\n  const { values, errors, handleChange } = useForm(validate);\r\n\r\n  const ValidationType = ({ type }) => {\r\n    const ErrorMessage = errors[type];\r\n    return errors[type] ? (\r\n      <Zoom cascade>\r\n        <S.Span>{ErrorMessage}</S.Span>\r\n      </Zoom>\r\n    ) : (\r\n      <S.Span />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.ContactContainer id={id} >\r\n    \r\n      <S.Contact>\r\n        <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n\r\n          <Col lg={12} md={12} sm={24}>\r\n          <Block padding={true} title={title} content={content} />\r\n              <Col>\r\n              <div className=\"formText\">\r\n                  <a href=\"tel:02-9419-7947\">\r\n                    Ph: (02) 9419 7947 \r\n                    </a>\r\n                </div> \r\n              <div className=\"formText\">\r\n                <a href={\r\n                  `https://www.google.com/maps/search/nit+17+4-6+Chaplin+Drive+Lane+Cove+West+NSW+2066./@-33.8098656,151.1461655,17z/data=!3m1!4b1`}> Unit 17, 4-6 Chaplin Drive Lane Cove West NSW 2066\r\n                  </a>\r\n              </div>\r\n                </Col>\r\n            <S.FormGroup autoComplete=\"off\" onSubmit={sendEmail ||  handleSubmit}  onsubmit=\"return false\">\r\n              <Col span={24}>\r\n                  <InputLabel shrink id=\"nameLabel\">\r\n                    Full Name  *\r\n                  </InputLabel>\r\n                <input minLength=\"1\"  required=\"required\" \r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"firstName\"\r\n                  label=\"services\"\r\n                  placeholder=\"Name *\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n              \r\n                <ValidationType type=\"name\" />\r\n              </Col>\r\n              \r\n              <Col span={24}>\r\n              <InputLabel shrink id=\"EmailLabel\">\r\n                    Email *\r\n                  </InputLabel>\r\n                <input id=\"input\" type=\"email\"\r\n                  name=\"email\" required=\"required\"\r\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    placeholder=\"JohnSmith@email.com *\" />\r\n                <ValidationType type=\"email\" />\r\n              </Col>\r\n              <Col span={24}>\r\n              <InputLabel shrink id=\"phoneLabel\">\r\n                    Phone Number *\r\n                  </InputLabel>\r\n                <input\r\n                  placeholder=\"Phone Number*\"\r\n                  value={values.number || \"\"}\r\n                  name=\"number\"\r\n                  required=\"required\"\r\n                  id=\"number\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"Number\" />\r\n              </Col>\r\n              <Col span={24}>\r\n              <InputLabel shrink id=\"suburbLabel\">\r\n                    Your Suburb *\r\n                  </InputLabel>\r\n                <input\r\n                  placeholder=\"Suburb Name*\"\r\n                  value={values.suburb || \"\"}\r\n                  name=\"suburb\"\r\n                  required=\"required\"\r\n                  id=\"suburb\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"Suburb\" />\r\n              </Col>\r\n              <Col span={24}>\r\n                <SimpleSelect\r\n                  placeholder=\"menu\"\r\n                  value={values.message || \"\"}\r\n                  name=\"menu\"\r\n                  required=\"required\"\r\n                  id=\"menu\"\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <Col span={24}>\r\n               <InputLabel shrink id=\"subjectLabel\">\r\n                    Your Subject *\r\n                  </InputLabel>\r\n                <input\r\n                required=\"required\" \r\n                  type=\"text\"\r\n                  name=\"subject\"\r\n                  id=\"subject\"\r\n                  placeholder=\"Subject *\"\r\n                  title=\"Subject *\"\r\n                  value={values.subject || \"\"}\r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"subject\" />\r\n              </Col>\r\n              <Col span={24}>\r\n              <InputLabel shrink id=\"MessageLabel\">\r\n                    Your Message *\r\n                  </InputLabel>\r\n                <TextArea\r\n                  placeholder=\"Message\"\r\n                  value={values.message || \"\"}\r\n                  name=\"message\"\r\n                  id=\"Message\"\r\n                  minLength=\"5\" \r\n                  onChange={handleChange}\r\n                />\r\n                <ValidationType type=\"message\" />\r\n              </Col>\r\n              <S.ButtonContainer>\r\n                <Button name=\"submit\" type=\"submit\" >\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n              </S.ButtonContainer>\r\n            </S.FormGroup>\r\n          </Col>\r\n          <Col lg={12} md={11} sm={24}>\r\n                    <Suspense fallback={<div>\r\n                    <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} /></div>}>\r\n                  <GoogleMap defer/>\r\n                </Suspense>\r\n          </Col>\r\n        </Row>\r\n      </S.Contact>\r\n    </S.ContactContainer>\r\n  );\r\n};\r\n\r\n\r\nexport default withTranslation()(Contact);\r\n"],"sourceRoot":""}